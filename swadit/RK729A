def encrypt(message):
    cipher = ''
    for letter in message:
        if letter != ' ':

           
            cipher += MORSE_CODE_DICT[letter] + ' '
        else:
            
            cipher += ' '

    return cipher



def decrypt(message):
    
    message += ' '

    decipher = ''
    citext = ''
    for letter in message:

        
        if (letter != ' '):

            
            i = 0

            
            citext += letter

           
        else:
            
            i += 1

           
            if i == 2:
                          
                decipher += ' '
            else:

                
                decipher += list(MORSE_CODE_DICT.keys())[list(MORSE_CODE_DICT
                                                              .values()).index(citext)]
                citext = ''

    return decipher
    
    
    
Q.9
 
import math
for i in range(int(math.sqrt(600851475143)),1,-1):
    if 600851475143 % i ==0:
        flag = False
        for y in range(int(math.sqrt(i)),1,-1):
            if(i % y ==0):
               flag = True
        if(flag!=True):
            print(i)
            break
            
 q.12
 
 def isPrime(n):
    if n < 2: return "Neither prime, nor composite"
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True

# returns the nth prime number
def nthPrime(n):
    numberOfPrimes = 0
    prime = 1

    while numberOfPrimes < n:
        prime += 1
        if isPrime(prime):
            numberOfPrimes += 1
    return prime

print(nthPrime(10001))
 
 
